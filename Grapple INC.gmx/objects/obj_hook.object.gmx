<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_hook_env</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>hook_create</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>keyUp = ord('W');
keyDown = ord('S');
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>hook_destroy</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
curDist = phyRoomPtM * point_distance(x, y, obj_player.x, obj_player.y);

//show_debug_message("curDist " + string(curDist));
if (curDist &gt; maxDist &amp;&amp; !isHooked) {
    instance_destroy();
}

if(isHooked &amp;&amp; !obj_player.connected) {
    var dir = keyboard_check(keyDown) - keyboard_check(keyUp);
    
    if (dir == 1){
        //distance--;
        var newDist = clamp(physics_joint_get_value(rope, phy_joint_max_length)* phyRoomPtM  + 0.1 * global.timeM, minDist, maxDist);
        physics_joint_set_value(
            rope, 
            phy_joint_max_length, 
            newDist
            //distance
        );
        show_debug_message(string(newDist));
    } else if (dir == -1){
        //distance++;
        var newDist = clamp(physics_joint_get_value(rope, phy_joint_max_length)* phyRoomPtM - 0.1 * global.timeM, minDist, maxDist);
        physics_joint_set_value(
            rope, 
            phy_joint_max_length, 
            newDist
            //distance
        );
        show_debug_message(string(newDist));        
    }
} else if(obj_player.connected){
    with(obj_player){
    
        var dir = keyboard_check(keyDown) - keyboard_check(keyUp);
        
        if (dir == 1){
            //distance--;
            var newDist = clamp(physics_joint_get_value(connectRope, phy_joint_max_length)* 0.05 + 0.1 * global.timeM, 2, 16);
            physics_joint_set_value(
                connectRope, 
                phy_joint_max_length, 
                newDist
                //distance
            );
            show_debug_message(string(newDist));
        } else if (dir == -1){
            //distance++;
            var newDist = clamp(physics_joint_get_value(connectRope, phy_joint_max_length)* 0.05 - 0.1 * global.timeM, 2, 16);
            physics_joint_set_value(
                connectRope, 
                phy_joint_max_length, 
                newDist
                //distance
            );
            show_debug_message(string(newDist));        
        }
        
    }
    var hookDist = distance_to_object(obj_hook_two);
    var hookDir = degtorad (point_direction(obj_hook_two.x, obj_hook_two.y, x, y) + 90);
    var ropeDist = physics_joint_get_value(obj_player.connectRope, phy_joint_max_length);
    
    if(hookDist &gt; ropeDist) {
        var ropeRest = 20;
        var difDist = hookDist - ropeDist;
        
        var xForce = sin(hookDir) * 3 * (difDist / ropeRest);
        var yForce = cos(hookDir) * 3 * (difDist / ropeRest);
        with(obj_hook_two){
            physics_apply_force(phy_com_x, phy_com_y, xForce, yForce);
        }
    }
    ropeLength = physics_joint_get_value(rope, phy_joint_max_length)*0.05;
    var newDist = physics_joint_get_value(obj_player.connectRope, phy_joint_max_length)*0.05 - physics_joint_get_value(obj_hook_two.rope, phy_joint_max_length)*0.05;
    if(newDist &lt; ropeLength + 0.2 &amp;&amp; ropeLength - newDist &gt; 0.05){
        physics_joint_set_value(
            rope, 
            phy_joint_max_length, 
            clamp(ropeLength - 0.1, 1, 15)
            //distance
        );
    } else if(newDist &gt; ropeLength + 0.05 &amp;&amp; ropeLength - newDist &lt; 0.05){
        physics_joint_set_value(
            rope, 
            phy_joint_max_length, 
            clamp(ropeLength + 0.1, 1, 15)
            //distance
        );
    }
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_spike">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!isHooked){    
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_movingPlatform">
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>hook_collision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_platform">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Empty
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>hook_collision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block_static">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
/*
if(instance_exists(obj_hook_two)){
    if(obj_hook_two.isHooked &amp;&amp; isHooked){
        
        curDist = phyRoomPtM * point_distance(x, y, obj_hook_two.x, obj_hook_two.y);
        bonusRope = physics_joint_rope_create(id, obj_hook_two, phy_com_x, phy_com_y, obj_hook_two.x, obj_hook_two.y, 2, false);
        
        physics_joint_set_value(bonusRope, phy_joint_max_length, curDist + 0.2);
        ds_list_add(jointList, bonusRope);
    }
}
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>601</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_execute_script</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>9</kind>
            <script>hook_collision</script>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
          <argument>
            <kind>0</kind>
            <string></string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="obj_block_noGrapple">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(!isHooked){
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_self();

draw_line_width(x,y, obj_player.x, obj_player.y, 0.6);


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>-1</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.100000001490116</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>3,3</point>
    <point>2,3</point>
  </PhysicsShapePoints>
</object>
